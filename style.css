/*-=-=-= RESET -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*/
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

ul {
  list-style: none;
}

a {
  text-decoration: none;
}

img {
  width: 100%;
  height: auto;
}

/*-=-=-= VARIABLES -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*/
:root {
  /* elemento "paizão" */
  /* var para tamanho height */
  --header-height: 3rem;
  /* var de cor*/
  --hue: 330;
  /* HSL color mode */
  --base-color: hsl(var(--hue) 50% 70%);
  --base-color-second: hsl(var(--hue) 65% 88%);
  --base-color-alt: hsl(var(--hue) 57% 53%);
  --title-color: hsl(var(--hue) 41% 10%);
  --text-color: hsl(0 0% 46%);
  --text-color-light: hsl(0 0 98%);
  --body-color: hsl(0 0% 98%);
}

/*-=-=-= BASE -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*/
/* definindo scroll suave */
html {
  scroll-behavior: smooth;
}
/* definindo atributos padrão do "body" */
body {
  font: 400 1rem 'DM Sans', sans-serif;
  color: var(--text-color);
  background: var(--body-color);
  -webkit-font-smoothing: antialiased;
}

/* definindo atributos padrão dos titulos h1 */
.title {
  font: 700 1.875rem 'Poppins', sans-serif;
  color: var(--title-color);
  -webkit-font-smoothing: auto;
}
/* definindo atributos padrão dos botões com classe "button" */
.button {
  background: var(--base-color);
  color: var(--text-color);
  height: 3.5rem;
  display: inline-flex;
  align-items: center;
  padding: 0 2rem;
  border-radius: 0.25rem;
  font: 500 1rem 'DM Sans', sans-serif;
  transition: background 0.3s; /* transição aplicada junto com ":hover"*/
}

/* definindo efeitos visuais ao passar o mouse em cima do botão */
.button:hover {
  background: var(--base-color-alt);
}

/* inclusão de um divisor visual com cor gradiente */
.divider-1 {
  height: 1px;
  background: linear-gradient(
    270deg,
    hsla(var(--hue), 36%, 57%, 1),
    hsla(var(--hue), 65%, 88%, 0.34)
  );
}

.divider-2 {
  height: 1px;
  background: linear-gradient(
    270deg,
    hsla(var(--hue), 65%, 88%, 0.34),
    hsla(var(--hue), 36%, 57%, 1)
  );
}
/*-=-=-= LAYOUT -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*/
/* definindo largura e margens da classe "conteiner" */
.container {
  margin-left: 1.5rem;
  margin-right: 1.5rem;
}

/* classe para criar um "gap" entre os filhos do elemento */
.grid {
  display: grid;
  gap: 2rem; /* da espaçamento automatico nos filhos */
}

/* espaçamento interno nas partes de cima e de baixo dos "sections"*/
.section {
  padding: 5rem 0;
}

/* todos os ".title que estão dentro dos ".section" receberão uma margem no bootom */
.section .title {
  margin-bottom: 1rem;
}

/* margem em baixo dos <header> dentro de classes ".section" */
.section header {
  margin-bottom: 4rem;
}

/* definição da cor do <strong> dentro do <header> dentro de classes ".section" */
.section header strong {
  color: var(--base-color);
}

/* incluindo uma linha na borda do "header" */
#header {
  border-bottom: 1px solid #e4e4e4;
  margin-bottom: 2rem;
  display: flex; /* o conteúdo interno do "header" fica flexível se adaptando */

  /* fazendo o header ficar fixado */
  width: 100%;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 100;
  background-color: var(--body-color);
  /* transição para a mudança de cor do header quando scroll */
  transition: background 0.3s;
}

/* inclusão de sombra e mudança de cores do header ao scrollar */
#header.scroll {
  background: var(--base-color);
  box-shadow: 0px 0px 12px rgba(0, 0, 0, 0.1);
  transition: background 0.3s;
}

#header.scroll .logo span {
  color: white;
}

#header.scroll .icon-menu {
  color: white;
}

/* definindo margem para o main, para que o conteúdo não fique escondido atrás do header fixo
- cada 16px = 1rem 
- definindo com cálculo, somando a altura do header/nav com a distância entre o início da imagem e o fim do header */
main {
  margin-top: calc(var(--header-height) + 2rem);
}

/*-=-=-= LOGO -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*/
/* definindo letra e cor das letras do logo */
.logo {
  font: 700 1.31rem 'Poppins', sans-serif;
  color: var(--title-color);
}

/* cor do <span> */
.logo span,
.section header span {
  color: var(--base-color);
}

/*-=-=-= NAVIGATION -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*/
/* definindo atributos da tag "nav" e disposição do logo e icone do menu*/
nav {
  height: var(--header-height);
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
}

/* alinhamento do texto ao centro */
nav ul li {
  text-align: center;
}

/* define transição de 0.2 segundos na cor */
nav ul li a {
  transition: color 0.2s;
  position: relative;
}

/* muda cor texto ao passar mouse */
nav ul li a:hover {
  color: var(--base-color);
}

/* criando linha embaixo dos elementos:
  - começando com largura = 0
*/
nav ul li a::after {
  content: '';
  width: 0%;
  height: 2px;
  background: var(--base-color);

  /* vai ter posicionamento absoluto ao próximo pai que tiver position:relative (que no caso é o nav ul li a)
  - com isso, ele já vai se enquadrar no tamanho da largura do elemento pai (relative )*/
  position: absolute;
  left: 0;
  bottom: -1.5rem;
  /* criando transição para a linha */
  transition: width 0.2s;
}

/* quando passa o mouse a largura fica = 100% */
nav ul li a:hover::after {
  width: 100%;
}

/* deixar a classe ".menu" oculta:
  - opacity= elemento está na tela, mas transparente
  - visibility: hidden= elemento está invisível */
nav .menu {
  opacity: 0;
  visibility: hidden;
  /* para fazer efeito do menu descendo */
  top: -20rem;
  transition: 0.2s;
}

/* --> MOSTRAR MENU <--
quando <nav> estiver com a classe ".show", procura o ".menu" lá dentro */
nav.show .menu {
  opacity: 1;
  visibility: visible;

  background: var(--body-color);

  /* 100vh = 100% da altura do dispositivo */
  height: 100vh;
  /* 100vw = 100% da largura do dispositivo */
  width: 100vw;
  /* fica fixo na página toda na posição "top: 0" e "left: 0" */
  position: fixed;
  top: 0;
  left: 0;
  /* espaça os elementos ao longo da tela  */
  display: grid;
  /* alinha o conteúdo no centro da tela */
  place-content: center;
}

/* fazer com que o conteúdo (<ul>) fique desaparecido até clicar em alguma coisa */
nav .menu ul {
  display: none;
}
/* quando clicar em algo e o menu aparecer (".show" entra na <nav>), o display fica "grid" e o conteúdo aparece */
nav.show .menu ul {
  display: grid;
}

/* quando o <nav> estiver com a classe ".show", aumenta a distância entre os elementos dos filhos do elemento <ul> que tem a classe "grid" */
nav.show ul.grid {
  gap: 4rem;
}

/* TOGGLE MENU -> LIGA/DESLIGA */
/* definindo cor do icone e tamanho */
.toggle {
  color: var(--base-color);
  font-size: 1.5rem;
  cursor: pointer;
}
nav .icon-close {
  /* a <div> com class "icon-close" (que é o "x") começa escondido */
  visibility: hidden;
  opacity: 0;
  /* definindo posicionamento do "x" */
  position: absolute;
  right: 1.5rem;
  /* ícone fica escondido lá em cima e desce até "top: 1.5rem" quando estiver com ".show" no <nav> */
  top: -1.5rem;
  /* transição do "x" */
  transition: 0.1s;
}

/* quando eu clicar no menu (que vai aparecer a classe "show" no <nav>) o "x" vai aparecer */
nav.show div.icon-close {
  visibility: visible;
  opacity: 1;
  /* ícone aparece na posição certa, para dar o efeito da transição */
  top: 1.5rem;
}

/*-=-=-= HOME -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*/

#home {
  overflow: hidden; /* significa "transbordar", com esse atributo ele "corta" o que transbordao limite do home */
}

/* resetando a margin da classe conteiner (para encostar na "parede") */
#home .container {
  margin: 0;
}

/* fazendo o quadrado colorido atrás da imagem */
#home .image {
  position: relative;
}

#home .image::before {
  content: '';
  height: 100%;
  width: 100%;
  background: var(--base-color-second);
  position: absolute;
  top: -16.8%;
  left: 16.7%;
  z-index: 0;
}

/* dando "margem" lateral para a imagem */
#home .image img {
  position: relative;
  right: 2.93rem;
}

/* borda arredondada em 2 elementos */
#home .image img,
#home .image::before {
  border-radius: 0.25rem;
}

/* alinhando texto da classe "text" ao centro */
#home .text {
  margin-left: 1.5rem;
  margin-right: 1.5rem;
  text-align: center;
}

/* aplicando margem de 1rem para baixo nos elementos h1 da classe "text" dentro da "home "*/
#home .text h1 {
  margin-bottom: 1rem;
}

/* aplicando margem de 2rem para baixo nos elementos p da classe "text" dentro da "home "*/
#home .text p {
  margin-bottom: 2rem;
  max-width: 100%;
}

/*-=-=-= ABOUT -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*/

/* resetando a margin da classe conteiner (para encostar na "parede") */

/* background da section "#about" */
#about {
  background-color: white;
}

#about .container {
  margin: 0;
}

/* fazendo o quadrado colorido atrás da imagem */
#about .image {
  position: relative;
}

#about .image::before {
  content: '';
  height: 100%;
  width: 100%;
  background: var(--base-color-second);
  position: absolute;
  top: -8.3%;
  left: -33%;
  z-index: 0;
}

#about .image img {
  position: relative;
}

/* borda arredondada em 2 elementos */
#about .image img,
#about .image::before {
  border-radius: 0.25rem;
}

/* alinhando texto da classe "text" ao centro */
#about .text {
  margin-left: 1.5rem;
  margin-right: 1.5rem;
}

/*-=-=-= SERVICES -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*/
/* aumentando distânciamento entre os cards */
.cards.grid {
  gap: 1.5rem;
}

/* definindo para as divs 
  - padding
  - leve box shadow
  - borda inferior colorida
  - borda arredondada nos cantos superiores
  - texto alinhado ao centro
  */
.card {
  padding: 3.625rem 2rem;
  box-shadow: 0px 0px 12px rgba(0, 0, 0, 0.08);
  border-bottom: 0.25rem solid var(--base-color);
  border-radius: 0.25rem 0.25rem 0 0;
  text-align: center;
}

/* definindo display do tipo block para ocupar a linha toda e definir seu tamanho
- geralmente usamos a tag <i> quando queremos colocar "ícones"
*/
.card i {
  display: block;
  margin-bottom: 1.5rem;
  font-size: 5rem;
  color: var(--base-color);
}

.card .title {
  font-size: 1.5rem;
  margin-bottom: 0.75rem;
}
